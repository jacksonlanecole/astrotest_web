# Generated by Django 2.0.5 on 2018-06-12 00:02

from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the book title.', max_length=140)),
                ('author_first_name', models.CharField(help_text="Enter the first author's first name.", max_length=140)),
                ('author_last_name', models.CharField(help_text="Enter the first author's last name.", max_length=140)),
                ('publisher', models.CharField(blank=True, help_text='(OPTIONAL) Enter the book publisher.', max_length=140, null=True)),
                ('year', models.CharField(blank=True, help_text='(OPTIONAL) Enter the published year.', max_length=4, null=True)),
            ],
            options={
                'verbose_name': 'book',
                'verbose_name_plural': 'books',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField()),
                ('title', models.CharField(max_length=400)),
                ('book', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='course', chained_model_field='course', help_text='Select a book from those listed.', on_delete=django.db.models.deletion.PROTECT, to='questions.Book')),
            ],
            options={
                'verbose_name': 'chapter',
                'verbose_name_plural': 'chapters',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university', models.CharField(help_text='Where is this course being taught?', max_length=140)),
                ('course_code', models.CharField(help_text='Enter the course code.', max_length=10)),
                ('title', models.CharField(help_text='Enter the title of the course.', max_length=140)),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.CharField(max_length=255, unique=True)),
                ('correct', models.BooleanField(default=False, unique=True, verbose_name='Correct answer')),
            ],
            options={
                'verbose_name': 'answer',
                'verbose_name_plural': 'answers',
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text="Enter the question here! LaTeX formatting is accepted... It's just going to be turned into LaTeX anyways!", unique=True)),
                ('difficulty', models.PositiveSmallIntegerField(choices=[(1, '1 (Easy)'), (2, '2 (Moderate)'), (3, '3 (Difficult)')], default=1)),
                ('index', models.PositiveSmallIntegerField(blank=True, default=50, help_text="I'm not really sure why this is needed...", null=True)),
                ('created_date', models.DateField(auto_now=True)),
                ('scrambleable', models.BooleanField(help_text='(REQUIRED) Select this box if the order of the answers in the question does not matter.')),
                ('book', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='course', chained_model_field='course', help_text='Select a book from above.', null=True, on_delete=django.db.models.deletion.PROTECT, to='questions.Book')),
                ('chapter', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='book', chained_model_field='book', help_text='Select a chapter from above.', null=True, on_delete=django.db.models.deletion.PROTECT, to='questions.Chapter')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='questions.Course')),
            ],
            options={
                'verbose_name': 'multiple choice question',
                'verbose_name_plural': 'multiple choice questions',
            },
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_objective', models.BooleanField(default=False, help_text='Is this question a custom objective (i.e. it is not aligned with any book objectives)?')),
                ('objective_number', models.PositiveSmallIntegerField(blank=True, null=True, unique=True, verbose_name='objective number')),
                ('objective_text', models.CharField(max_length=400)),
                ('book', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='course', chained_model_field='course', help_text='Select a book from those listed.', null=True, on_delete=django.db.models.deletion.PROTECT, to='questions.Book')),
                ('chapter', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='book', chained_model_field='book', default=0, help_text='Select a book those listed above.', null=True, on_delete=django.db.models.deletion.PROTECT, to='questions.Chapter')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='questions.Course')),
            ],
            options={
                'verbose_name': 'objective',
                'verbose_name_plural': 'objectives',
                'ordering': ['chapter', 'objective_number'],
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of a new source. (e.g. book, testbank, homework, clicker, etc.)', max_length=30, unique=True, verbose_name='source name')),
            ],
            options={
                'verbose_name': 'source',
                'verbose_name_plural': 'sources',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TrueFalseQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(help_text="Enter the question here! LaTeX formatting is accepted... It's just going to be turned into LaTeX anyways!", unique=True)),
                ('difficulty', models.PositiveSmallIntegerField(choices=[(1, '1 (Easy)'), (2, '2 (Moderate)'), (3, '3 (Difficult)')], default=1)),
                ('index', models.PositiveSmallIntegerField(blank=True, default=50, help_text="I'm not really sure why this is needed...", null=True)),
                ('created_date', models.DateField(auto_now=True)),
                ('answer', models.NullBooleanField(help_text='Select box if True, leave unselected if false.')),
                ('book', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='course', chained_model_field='course', help_text='Select a book from above.', null=True, on_delete=django.db.models.deletion.PROTECT, to='questions.Book')),
                ('chapter', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='book', chained_model_field='book', help_text='Select a chapter from above.', null=True, on_delete=django.db.models.deletion.PROTECT, to='questions.Chapter')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='questions.Course')),
                ('objective', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='chapter', chained_model_field='chapter', help_text='(REQUIRED) Select an objective.', on_delete=django.db.models.deletion.PROTECT, to='questions.Objective')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='questions.Source')),
            ],
            options={
                'verbose_name': 'True/False question',
                'verbose_name_plural': 'True/False questions',
            },
        ),
        migrations.AddField(
            model_name='multiplechoicequestion',
            name='objective',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='chapter', chained_model_field='chapter', help_text='(REQUIRED) Select an objective.', on_delete=django.db.models.deletion.PROTECT, to='questions.Objective'),
        ),
        migrations.AddField(
            model_name='multiplechoicequestion',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='questions.Source'),
        ),
        migrations.AddField(
            model_name='multiplechoiceanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='answers', to='questions.MultipleChoiceQuestion'),
        ),
        migrations.AddField(
            model_name='chapter',
            name='course',
            field=models.ForeignKey(help_text='Select a course from those listed.', null=True, on_delete=django.db.models.deletion.PROTECT, to='questions.Course'),
        ),
        migrations.AddField(
            model_name='book',
            name='course',
            field=models.ForeignKey(help_text='In which course is this book used?', on_delete=django.db.models.deletion.PROTECT, to='questions.Course'),
        ),
    ]
